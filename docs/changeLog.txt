1. Webstyle:
   a) webstyle_templates.py:
 			- def tmpl_pageheader():
			        - new jquery, jquery-ui link

2. Websearch:
   a) websearch_favorite_collection.py
   b) websearch_templates.py :
     			- def tmpl_favorite_collection()
			- def tmpl_search_query_viz()
     			- def tmpl_narrowsearch():
				- #HTML for favorites hovercard: in sons & grandsons
   c) websearch_webcoll.py:
			- def perform_display_collection():
   			        - fav_data
			        - fav_body
			        - c_body (,,,fav_body,,)

   d) websearch_webinterface.py:
			# Resulting in new urls /hovercard & /search_q_viz
			- class WebInterfaceSearchInterfacePages():
			  	- _exports = [,,'search_q_viz', 'hovercard',,,]
				- def search_q_viz()
				- def hovercard()
								
3. /var/www/static/:
	- data.txt : to test /static readability
	- data.json: sample data to pick up into visualizations

4. invenio DB:
   	- fav_collec : New table to keep user favorite collection preferences

===============================================
> webinterface_webcoll.py

    # import Db_logic_function from invenio.websearch.websearch_favorites                                                                          
    # Db_logic_function(uID) (uses dbquery module):                                                                                                
    # returns the tuple for a uID (if User is present) displaying collection name and id in a tuple                                                
    # adds a collID with a uID is user authenticated and requires tuple to be added                                                                
    # deletes a collID with a uID if deletion requested                                                                                            

    # then add here the fav_body()                                                                                                                 
    # where the fav_body calls the tmpl_favorites() sending the tuple and where the HTML for favorites is formed.                                  

    # in c_body add to the passed parameters, the data object for HTML returned from tmpl_favorites.                                               
    # this c_body now contains the HTML for favorites included (if uID is authentic)                                                               
    # this c_body now goes back to web_interface script and becomes part of URL which opens the main webpage.                                      

    # meanwhile,                                                                                                                                   
    # tmpl_narrowsearch prepares the HTML for focuson, so similarly, pass a fav_data_object which adds some <div> for hovercards for each collecti\
on                                                                                                                                                 
    # when deletion required, (a cross displayed in front of favorites), an AJAX request passed to webinterface file, (in req) and collID and uID \
is passed. this gets passed to websearch_favorites which calls deleted method and returns the new favorites tuple. this return tuple, when bibsche\
d webcoll is run, updates the display  

========================================================
